// <auto-generated />
using System;
using FormDesigner.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FormDesigner.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FormDesigner.API.Models.Entities.FormDefinitionEntity", b =>
                {
                    b.Property<string>("FormId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("form_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("DslJson")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("dsl_json");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<bool>("IsCommitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_committed");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("version");

                    b.HasKey("FormId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_form_definitions_created_at");

                    b.HasIndex("DslJson")
                        .HasDatabaseName("ix_form_definitions_dsl_json");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DslJson"), "gin");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("ix_form_definitions_is_active");

                    b.HasIndex("IsCommitted")
                        .HasDatabaseName("ix_form_definitions_is_committed");

                    b.ToTable("form_definitions", (string)null);
                });

            modelBuilder.Entity("FormDesigner.API.Models.Entities.FormInstanceEntity", b =>
                {
                    b.Property<Guid>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("instance_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("DataJson")
                        .HasColumnType("jsonb")
                        .HasColumnName("data_json");

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("form_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("draft")
                        .HasColumnName("status");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("submitted_at");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("user_id");

                    b.HasKey("InstanceId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_form_instances_created_at");

                    b.HasIndex("DataJson")
                        .HasDatabaseName("ix_form_instances_data_json");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("DataJson"), "gin");

                    b.HasIndex("FormId")
                        .HasDatabaseName("ix_form_instances_form_id");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_form_instances_status");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_form_instances_user_id");

                    b.ToTable("form_instances", (string)null);
                });

            modelBuilder.Entity("FormDesigner.API.Models.Entities.TemporaryStateEntity", b =>
                {
                    b.Property<Guid>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("state_id");

                    b.Property<string>("DataJson")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("data_json");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid")
                        .HasColumnName("instance_id");

                    b.Property<DateTime>("SavedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("saved_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("user_id");

                    b.HasKey("StateId");

                    b.HasIndex("InstanceId")
                        .HasDatabaseName("ix_temporary_states_instance_id");

                    b.HasIndex("SavedAt")
                        .HasDatabaseName("ix_temporary_states_saved_at");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_temporary_states_user_id");

                    b.ToTable("temporary_states", (string)null);
                });

            modelBuilder.Entity("FormDesigner.API.Models.Entities.FormInstanceEntity", b =>
                {
                    b.HasOne("FormDesigner.API.Models.Entities.FormDefinitionEntity", "FormDefinition")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormDefinition");
                });

            modelBuilder.Entity("FormDesigner.API.Models.Entities.TemporaryStateEntity", b =>
                {
                    b.HasOne("FormDesigner.API.Models.Entities.FormInstanceEntity", "FormInstance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormInstance");
                });
#pragma warning restore 612, 618
        }
    }
}
